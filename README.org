#+title: Emacs Config
#+author: Leandrus Fanzec
#+startup: overview
#+SETUPFILE: ~/.emacs.d/latex.setup

* üöÄ Presentaci√≥n

[[file:captura.png]]

Esta es una configuraci√≥n muy b√°sica, pero a la vez c√≥moda que he
podido probar con √©xito en la versi√≥n 28 y 27 de Emacs, y en las
distribuciones de Ubuntu, Fedora y Gentoo. En realidad es una
configuraci√≥n muy m√≠nima y simple por lo que no tendr√≠a por qu√© no
funcionar en cualquier otra distribuci√≥n.

Como bien deslizaba en el p√°rrafo anterior, se trata de la
configuraci√≥n b√°sica y minimalista que personalmente he tratado de
mantener, pero estimo sinceramente que, puede ser de utilidad a los
usuarios que deseen conocer por primera vez la capacidad de Emacs.

* ü§∑ ¬øPor qu√© utilizar esta configuraci√≥n?

Una de las primeras dudas que pudiese aparecer al usuario es la
pregunta respecto a ¬øpara qu√© utilizarla? ¬øacaso el programa
necesariamente necesita esa configuraci√≥n? y en definitiva: ¬øPor qu√©
√©sta y no otra?

1. Creo que esta es una buena configuraci√≥n para una persona que viene
   aproxim√°ndose a Emacs, principalmente en esta parte del mundo en la
   que se habla espa√±ol y la b√∫squeda de informaci√≥n se hace dif√≠cil.

2. En segundo lugar, porque no se atreve a cambiar su funcionamiento
   normal, como es el caso de Doomemacs o Vimspace, las cuales ya son
   muy conocidas y tambi√©n utilizadas masivamente pero que
   sobresaturan las funciones normales del programa.

3. En cambio esta configuraci√≥n, tal como podemos observar de la
   lectura de la secci√≥n [[Packages][Packages]], son apenas los siguientes:

   + vertico
   + orderless
   + consult
   + pdf-tools

4. Es una buena manera de aprender conocer el sistema tal como es,
   porque de esta manera es m√°s f√°cil de buscar informaci√≥n. Con esto
   quiero decir que, la informaci√≥n siempre es m√°s abundante con
   programas estandarizados, por el mero hecho de que es m√°s com√∫n.  

** üëì Una configuraci√≥n minima para documentos

Cabe se√±alar que, esta configuraci√≥n se enfoca en las necesidades de
una persona no-programador (que es mi caso), con eso me refiero a que
con el paquete "pdf-tool", y la template de latex, satisfacen mas bien
las necesidades de aquellos que generalmente utilizan documentos pdf.

Con pdf-tools, tendremos un visualizador y editor de pdf dentro emacs,
el cual tiene distintas configuraciones con las cuales el usuario
puede echar mano. Sin embargo, con la configuraci√≥n por defecto de
este paquete ya tendremos la posibilidad de resaltar y subrayar el
texto.

** üì∞ Template Latex

Como se puede observar en la secci√≥n [[Latex][Latex]], he tomado la template que
provee Jake B en un v√≠deo que se cita m√°s abajo.

Para poder utilizar ese archivo de configuraci√≥n como ah√≠ se se√±ala,
se debe tener un archivo de setup que tambi√©n est√° en este
repositorio, que, _es de completa autor√≠a de Jake B_, yo solamente
modifique algunas cosas para espa√±ol conforme a mis necesidades.

Dicho archivo debe ser invocado al inicio de un documento tipo org, de
la siguiente manera:

> #+SETUPFILE: ~/.emacs.d/latex.setup

Se puede tomar de ejemplo este mismo documento de configuraci√≥n, el
cual ya viene con ese ajuste y que m√°s adelante podremos ver como
funciona.

Se debe reparar que la ruta que ah√≠ se indica es la de configuraci√≥n
de Emacs, a la cual, anteriormente se hab√≠an traspasado los archivos
del repositorio, dentro de estos archivos iba tambi√©n el que invoca
ahora denominado "latex.setup".

Para hacerlo aun m√°s did√°ctico este mismo archivo ya se encuentra con
esa configuraci√≥n y si quieres probar c√≥mo funciona basta con seguir
los siguientes pasos:

1) Abra Emacs (como se se√±ala m√°s arriba);
2) Busque el archivo configuraci√≥n README.org utilizando: C-x C-f y
   buscando la siguiente ruta: ~/.emacs.d/README.org.
3) Abra el archivo;
4) Presione "C-c e", aparecer√° un menu de exportaci√≥n;
5) Presione la tecla "l" (latex) y luego "o" (generar pdf y abrir;
6) Puedes acompa√±ar el proceso en los avisos que aparece en el
   mini-buffer
   
*** ‚ö† Dependencias

Para el correcto funcionamiento de la funci√≥n anteriormente descrita
debemos tener instalados los siguientes paquetes:

- Texlive
- Texlive-Lua
- Texlive-bibtex

* üíª Instalaci√≥n




Para realizar la instalaci√≥n se debiera copiar este repositorio dentro
de la misma carpeta de Emacs para ejecutarlo al inicio del programa:

> git clone https://github.com/leandrusfanzec/emacs-leandrus.git

> cd emacs-leandrus/

> cp * ~/.emacs.d/

_Aviso_: Lo que se est√° haciendo en el √∫ltimo comando es copiar los
archivos del repositorio a la carpeta de configuraciones de
Emacs. Esta carpeta solamente se crea cuando *se haya abierto alguna
vez el programa*, por lo que si nosotros simplemente instalamos Emacs
y luego copiamos dichos documentos nos saldr√° un error se√±alando que
dicho destino (/la carpeta de configuracion ".emacs.d"/), no
existe. Nada impide, por otro lado, que lo hagamos nosotros mismos con
el comando /mkdir/ (en este caso ser√≠a: "mkdir $HOME/.emacs.d").

* üí° Consejos para Uso

** Daemon y Cliente

Para un mejor en general, se recomienda iniciar el programa Emacs como
daemon y luego simplemente invocar los clientes. Lo que en l√≠nea de
comando es algo as√≠, dependiendo de la distribuci√≥n:

- /ejemplo gen√©rico:/

> emacs -daemon

En este momento cargar√° la configuraci√≥n, los repositorios y
paquetes. Al final debiese aparecer un aviso diciendo que el demonio
ha iniciado.

Y luego:

> emacsclient -c

Esto puede variar dependiendo del SO, pero en general esta es la idea:
daemon + client.

** Manual de Referencia

Se recomienda familiarizarse con los manuales de los paquetes y de
Emacs mismo, para eso podemos utilizar el atajo: /"C-h i"/.

** Atajos de teclado

En la [[Key Maps][√∫ltima secci√≥n]] se definen algunos atajos, no son muchos y se
recomienda su lectura.

** Procesos en otro Buffer (Pdf-tools)

Durante la primera ejecuci√≥n del programa es probable que el paquete
pdf-tools mantenga procesos para su instalaci√≥n en un buffer
secundario (es decir, lo m√°s probable es que el usuario no se d√©
cuenta).

Se recomienda cambiar de buffer con "C-x b" al que se estar√°
compilando el programa, el nombre del buffer tendr√° ese mismo nombre:
"compile...". Ya dentro de ese buffer podremos acompa√±ar el proceso de
instalaci√≥n. Lo m√°s probable es que se pida contrase√±a para la
instalaci√≥n de sus dependencias.

Una vez concluido, podremos probar el funcionamiento de pdf-tools,
abriendo cualquier pdf dentro de Emacs.

* Comportamiento General

En esta primera etapa la configuraci√≥n realiza peque√±os ajustes para
que la interfaz sea un poco m√°s minimalista, elimina el aviso sonoro y
visual, mejora el movimiento de scroll y agrega una funci√≥n de
"unfill" que personalmente me pareci√≥ muy √∫til.

#+begin_src emacs-lisp
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (setq inhibit-splash-screen t)
  (scroll-bar-mode -1)
  (blink-cursor-mode -1)
  ;; Easy-Kill de buffer whitout modifications
  (global-set-key [(control x) (k)] 'kill-this-buffer)
  ;; Mejora la b√∫squeda (simplifica)
  (setq search-whitespace-regexp ".*")
  (setq isearch-lax-whitespace t)
  (setq isearch-regexp-lax-whitespace nil)
  (setq initial-scratch-message "\n;; HOLA!\n\n\n")
  (setq user-full-name "NOMBREUSUARIO")

  ;; Unfill Function
  ;;; Stefan Monnier <foo at acm.org>. It is the opposite of fill-paragraph
  (defun unfill-paragraph (&optional region)
    "Takes a multi-line paragraph and makes it into a single line of text."
    (interactive (progn (barf-if-buffer-read-only) '(t)))
    (let ((fill-column (point-max))
          ;; This would override `fill-column' if it's an integer.
          (emacs-lisp-docstring-fill-column t))
      (fill-paragraph nil region)))

  (load-theme 'modus-operandi)            ; Light theme

  ;; Monospaced typeface (En ubuntu utilizo esta fuente para los block codes)
  (set-face-attribute 'fixed-pitch nil :family "Ubuntu Mono" :height 1.0)
#+end_src

* Repositorios

Aqu√≠ se configura los repositorios elpa y melpa, creo que con estos
dos los usuarios podr√°s encontrar la mayor√≠a de los paquetes que
busquen, configurando a la vez "use-package" que es muy √∫til para
configurar dichos paquetes.

Esto es enteramente sacado de System Crafters y su saga EFS.

#+begin_src emacs-lisp
  (require 'package)

  (setq package-archives '(("melpa" . "https://melpa.org/packages/")
			   ("elpa" . "https://elpa.gnu.org/packages/")))

  (package-initialize)
  (unless package-archive-contents
    (package-refresh-contents))

  (unless (package-installed-p 'use-package)
    (package-install 'use-package))

  (require 'use-package)
  (setq use-package-always-ensure t)
#+end_src

* Packages

En esta secci√≥n se instalan y configuran los paquetes que ser√°n
instalados a trav√©s de usa-packages.

#+begin_src emacs-lisp
  ;; Enable vertico
  (use-package vertico
    :init
    (vertico-mode))

  (use-package orderless
    :init
    (setq completion-styles '(orderless basic)
          completion-category-defaults nil
          completion-category-overrides '((file (styles partial-completion)))))

  (use-package pdf-tools
    :config
    (pdf-tools-install))
#+end_src

* Dired

Esto es un peque√±o ajuste para que no aparezcan todos los archivos
ocultos en Dired, haci√©ndolo un poco m√°s simple.

#+begin_src emacs-lisp
  (add-hook 'dired-mode-hook 'dired-hide-details-mode)
#+end_src

* Org

Estas son algunas configuraciones para el uso general de los archivos
en org.  Como por ejemplo el spell-check, sangr√≠a, modifica el s√≠mbolo
de folded de los headlines.

#+begin_src emacs-lisp
  (add-hook 'org-mode-hook 'turn-on-flyspell)
  (setq org-startup-indented t
        org-pretty-entities t
        org-hide-leading-stars t
        org-image-actual-width '(300))
  (setq org-ellipsis " ‚ñº ")
#+end_src

* Org-Agenda

Estas son configuraciones para traducir el calendario y agenda que en
alg√∫n momento los encontr√© por internet y me pareci√≥ perfecto.

#+begin_src emacs-lisp
  ;; Calendar
  (setq calendar-date-style 'iso)
  (setq calendar-week-start-day 1)
  (setq calendar-day-header-array ["Do" "Lu" "Ma" "Mi" "Ju" "Vi" "S√°"])
  (setq calendar-day-name-array ["domingo" "lunes" "martes" "mi√©rcoles" "jueves" "viernes" "s√°bado"])
  (setq calendar-month-abbrev-array ["Ene" "Feb" "Mar" "Abr" "May" "Jun" "Jul" "Ago" "Sep" "Oct" "Nov" "Dic"])
  (setq calendar-month-name-array ["enero" "febrero" "marzo" "abril" "mayo" "junio" "julio" "agosto" "septiembre" "octubre" "noviembre" "diciembre"])

  ;; Agenda
  (setq org-agenda-start-with-log-mode t)
  (setq org-log-done 'time)
  (setq org-log-into-drawer t)

  ;; Resume clocking task when emacs is restarted
  (org-clock-persistence-insinuate)
  ;; Show lot of clocking history so it's easy to pick items off the C-F11 list
  (setq org-clock-history-length 23)
  ;; Resume clocking task on clock-in if the clock is open
  (setq org-clock-in-resume t)
  ;; Sometimes I change tasks I'm clocking quickly - this removes clocked tasks with 0:00 duration
  (setq org-clock-out-remove-zero-time-clocks t)
  ;; Clock out when moving task to a done state
  (setq org-clock-out-when-done t)
  ;; Save the running clock and all clock history when exiting Emacs, load it on startup
  (setq org-clock-persist t)
  ;; Include current clocking task in clock reports
  (setq org-clock-report-include-clocking-task t)

  (setq org-return-follows-link t)
#+end_src

* Latex

Esto es algo tomado de [[https://www.youtube.com/@JakeBox0][Jake B]] por lo que recomiendo ver su v√≠deo que
dejar√© [[https://jakebox.github.io/youtube/org_latex_video.html][aqu√≠]].

#+begin_src emacs-lisp
  (with-eval-after-load 'ox-latex
    (add-to-list 'org-latex-classes
                 '("org-plain-latex"
                   "\\documentclass{article}
             [NO-DEFAULT-PACKAGES]
             [PACKAGES]
             [EXTRA]"
                   ("\\section{%s}" . "\\section*{%s}")
                   ("\\subsection{%s}" . "\\subsection*{%s}")
                   ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
                   ("\\paragraph{%s}" . "\\paragraph*{%s}")
                   ("\\subparagraph{%s}" . "\\subparagraph*{%s}"))))
#+end_src

* Key Maps

Por √∫ltimo, estableceremos los atajos de teclado para que alguna de
las funciones m√°s utilizadas est√©n "m√°s a la mano" a la hora de
trabajar.

#+begin_src emacs-lisp
  ;; Org
  (global-set-key (kbd "C-c c") #'org-capture)
  (global-set-key (kbd "C-c a") #'org-agenda)
  ;; Compara modificaciones en el buffer
  (global-set-key (kbd "C-x v =") #'diff-buffer-with-file)
  ;; Utilities
  (global-set-key (kbd "C-x c") 'calendar)
  ;; Comportamiento imenu
  (global-set-key (kbd "M-i") 'imenu)
  ;; Unfill
  (define-key global-map "\M-Q" 'unfill-paragraph)
  ;; Toggle theme 
  (define-key global-map (kbd "<f5>") 'modus-themes-toggle)
#+end_src
